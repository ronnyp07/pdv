angular.module("ivh.multiSelect",["selectionModel"]),angular.module("ivh.multiSelect").directive("ivhMultiSelectAsync",function(){"use strict";return{scope:{labelAttr:"=ivhMultiSelectLabelAttribute",labelExpr:"=ivhMultiSelectLabelExpression",idAttr:"=ivhMultiSelectIdAttribute",selectedItems:"=ivhMultiSelectSelectedItems",getItems:"=ivhMultiSelectFetcher",selectionModelType:"=",selectionModelMode:"=",selectionModelSelectedAttribute:"=",selectionModelSelectedClass:"=",selectionModelCleanupStrategy:"=",selOnChange:"&selectionModelOnChange"},restrict:"AE",template:'\n<div class="ivh-multi-select dropdown" ng-class="{open: ms.isOpen}"\nivh-multi-select-collapsable>\n<button class="btn btn-default dropdown-toggle" type="button"\nivh-multi-select-stay-open\nng-click="ms.isOpen = !ms.isOpen; ms.getItems()">\n<span ng-transclude></span>\n<span class="caret"></span>\n</button>\n<ul class="dropdown-menu" role="menu" ng-if="ms.isOpen"\nivh-multi-select-stay-open>\n<li role="presentation" ivh-multi-select-tools></li>\n<li role="presentation" ivh-multi-select-filter></li>\n<li role="presentation" class="divider"></li>\n<li role="presentation" class="ms-item"\nng-repeat="item in ms.items"\nselection-model\nselection-model-mode="ms.sel.mode"\nselection-model-type="ms.sel.type"\nselection-model-selected-attribute="ms.sel.selectedAttribute"\nselection-model-on-change="ms.onSelectionChange(item);ms.sel.onChange(item)">\n<a role="menuitem">\n<!-- Must stop propagation on checkbox clicks when nested within the `a`\ntag otherwise `a` fires a click too and undoes the first click. We\nwant to honor the actual checkbox click. -->\n<input type="checkbox" ng-click="$event.stopPropagation()" />\n{{:: ms.getLabelFor(item)}}\n</a>\n</li>\n<li role="presentation" ng-hide="ms.items.length"\nivh-multi-select-no-results>\n</li>\n<li role="presentation" ng-if="ms.hasPager && ms.countItems > ms.sizePage">\n<div class="text-center"\nivh-pager\nivh-pager-total="ms.countItems"\nivh-pager-page-number="ms.ixPage"\nivh-pager-page-size="ms.sizePage"\nivh-pager-button-size="\'sm\'"\nivh-pager-on-page-change="ms.onPageChange(newPage, oldPage)">\n</div>\n</li>\n</ul>\n</div>\n',transclude:!0,controllerAs:"ms",controller:["$document","$scope","$q","ivhMultiSelectCore",function(a,b,c,d){var e=this;d.init(e,b);var f=b.idAttr||"id",g=b.selectedItems||[],h=function(a){for(var b=g.length;b--;)if(g[b][f]===a[f])return!0;return!1},i=function(){for(var a=e.sel.selectedAttribute,b=e.items.length;b--;)e.items[b][a]=h(e.items[b])};e.onSelectionChange=function(a){var b,c=e.sel.selectedAttribute;if("single"===e.sel.mode)if(a[c])g.length=0,g.push(a);else for(b=g.length;b--;)a[f]===g[b][f]&&g.splice(b,1);else{for(b=g.length;b--;)if(g[b][f]===a[f]){g.splice(b,1);break}a[c]&&g.push(a)}},e.items=[],e.countItems=0,e.selectAllVisible=function(a){a=angular.isDefined(a)?a:!0;var d,h=e.sel.selectedAttribute;if(a===!1&&""===e.filterString){for(d=g.length;d--;)g[d][h]=!1,e.sel.onChange(g[d]);g.length=0}else{var i=Math.ceil(e.countItems/2);c.all([b.getItems({filter:e.filterString,page:0,pageSize:i}),b.getItems({filter:e.filterString,page:1,pageSize:i})]).then(function(b){var c=b[0].items.concat(b[1].items),i={},j={};for(d=c.length;d--;){var k=c[d][f];i.hasOwnProperty(k)&&c.splice(d,1),i[k]=1}for(d=g.length;d--;)i.hasOwnProperty(g[d][f])&&(j[g[d][f]]=1,g.splice(d,1));for(a&&Array.prototype.push.apply(g,c),d=e.items.length;d--;)e.items[d][h]=a,j.hasOwnProperty(e.items[d][f])||e.sel.onChange(e.items[d])})}},e.getItems=function(){if(!e.isOpen)return c.when(e.item);var a=++j;return c.when(b.getItems({filter:e.filterString,page:e.ixPage,pageSize:e.sizePage})).then(function(b){return a===j?(e.items=b.items,e.ixPage=b.page||e.ixPage,e.sizePage=b.pageSize||e.sizePage,e.countItems=b.totalCount||e.items.length,e.items.length>e.sizePage&&(e.items.length=e.sizePage),i(),e.items):void 0},function(a){return e.items=[],e.countItems=0,e.items})};var j=0;e.onFilterChange=function(){e.ixPage=0,e.getItems()},e.onPageChange=function(a,b){e.ixPage=a,e.getItems()},b.$watch("selectedItems",function(a,b){a&&a!==b&&(g=a,i())})}]}}),angular.module("ivh.multiSelect").directive("ivhMultiSelectCollapsable",["$document",function(a){"use strict";return{restrict:"A",require:["?^ivhMultiSelect","?^ivhMultiSelectAsync"],link:function(b,c,d,e){var f=a.find("body"),g=function(a){var c=a.originalEvent||a;c.ivhMultiSelectIgnore||(angular.forEach(e,function(a){a&&(a.isOpen=!1)}),b.$digest())};f.on("click",g),b.$on("$destroy",function(){f.off("click",g)})}}}]),angular.module("ivh.multiSelect").directive("ivhMultiSelectFilter",function(){"use strict";return{restrict:"A",template:'<a class="ms-tools">\n<!-- ms.getItems only defined in async version -->\n<input class="form-control" type="text"\nplaceholder="Search..."\nng-model="ms.filterString"\nng-change="ms.onFilterChange()"\nng-model-options="{debounce: 200}"\nivh-auto-focus />\n</a>\n'}}),angular.module("ivh.multiSelect").directive("ivhMultiSelectNoResults",function(){"use strict";return{restrict:"A",template:'<a class="ms-tools">\n<em class="text-muted">\nNothing to show\n</em>\n</a>\n'}}),angular.module("ivh.multiSelect").directive("ivhMultiSelectStayOpen",function(){"use strict";return{restrict:"A",link:function(a,b,c){b.on("click",function(a){var b=a.originalEvent||a;b.ivhMultiSelectIgnore=!0})}}}),angular.module("ivh.multiSelect").directive("ivhMultiSelectTools",function(){"use strict";return{restrict:"A",template:'<a class="ms-tools">\n<button class="btn btn-default btn-sm"\nng-click="ms.enableMultiSelect && ms.selectAllVisible()"\nng-if="ms.enableMultiSelect">\n<span class="glyphicon glyphicon-ok"></span>\nAll\n</button>\n<button class="btn btn-default btn-sm"\nng-click="ms.enableMultiSelect && ms.selectAllVisible(false)"\nng-if="ms.enableMultiSelect">\n<span class="glyphicon glyphicon-remove"></span>\nNone\n</button>\n<button class="btn btn-default btn-sm"\nng-show="ms.filterString.length"\nng-click="ms.filterString = \'\';ms.onFilterChange()">\nClear\n</button>\n</a>\n'}}),angular.module("ivh.multiSelect").directive("ivhMultiSelect",function(){"use strict";return{scope:{labelAttr:"=ivhMultiSelectLabelAttribute",labelExpr:"=ivhMultiSelectLabelExpression",items:"=ivhMultiSelectItems",selectionModelType:"=",selectionModelMode:"=",selectionModelSelectedAttribute:"=",selectionModelSelectedClass:"=",selectionModelCleanupStrategy:"=",selectionModelSelectedItems:"=",selOnChange:"&selectionModelOnChange"},restrict:"AE",template:'\n<div class="ivh-multi-select dropdown" ng-class="{open: ms.isOpen}"\nivh-multi-select-collapsable>\n<button class="btn btn-default dropdown-toggle" type="button"\nivh-multi-select-stay-open\nng-click="ms.isOpen = !ms.isOpen">\n<span ng-transclude></span>\n<span class="caret"></span>\n</button>\n<ul class="dropdown-menu" role="menu" ng-if="ms.isOpen"\nivh-multi-select-stay-open>\n<li role="presentation" ivh-multi-select-tools></li>\n<li role="presentation" ivh-multi-select-filter></li>\n<li role="presentation" class="divider"></li>\n<li role="presentation" class="ms-item"\nng-repeat="item in ms.items = (items | ivhMultiSelectLabelFilter:ms) | ivhMultiSelectPaginate:ms.ixPage:ms.sizePage"\nselection-model\nselection-model-mode="ms.sel.mode"\nselection-model-type="ms.sel.type"\nselection-model-selected-attribute="ms.sel.selectedAttribute"\nselection-model-on-change="ms.sel.onChange(item)"\nselection-model-selected-items="ms.sel.selectedItems">\n<a role="menuitem">\n<!-- Must stop propagation on checkbox clicks when nested within the `a`\ntag otherwise `a` fires a click too and undoes the first click. We\nwant to honor the actual checkbox click. -->\n<input type="checkbox" ng-click="$event.stopPropagation()" />\n{{:: ms.getLabelFor(item)}}\n</a>\n</li>\n<li role="presentation" ng-hide="ms.items.length"\nivh-multi-select-no-results>\n</li>\n<li role="presentation" ng-if="ms.hasPager && ms.items.length > ms.sizePage">\n<div class="text-center"\nivh-pager\nivh-pager-total="ms.items.length"\nivh-pager-page-number="ms.ixPage"\nivh-pager-page-size="ms.sizePage"\nivh-pager-button-size="\'sm\'">\n</div>\n</li>\n</ul>\n</div>\n',transclude:!0,controllerAs:"ms",controller:["$document","$scope","ivhMultiSelectCore",function(a,b,c){var d=this;c.init(d,b),d.items=b.items,d.selectAllVisible=function(a){a=angular.isDefined(a)?a:!0;var b=d.sel.selectedAttribute;angular.forEach(d.items,function(c){c[b]=a,d.sel.onChange(c)})}}]}}),angular.module("ivh.multiSelect").filter("ivhMultiSelectCollect",["selectionModelOptions",function(a){"use strict";var b=a.get().selectedAttribute;return function(a,c,d,e){if(!a||!c)return a;var f=c[e||b],g=c[d||"id"],h=a.indexOf(g);return f&&-1===h?a.push(g):!f&&h>-1&&a.splice(h,1),a}}]),angular.module("ivh.multiSelect").filter("ivhMultiSelectLabelFilter",[function(a){"use strict";return function(a,b){var c=b.filterString;if(!a||!c)return a;var d=[];return angular.forEach(a,function(a){b.getLabelFor(a).indexOf(c)>-1&&d.push(a)}),d}}]),angular.module("ivh.multiSelect").filter("ivhMultiSelectPaginate",["$injector",function(a){"use strict";var b=function(a){return a};return a.has("ivhPaginateFilter")&&(b=a.get("ivhPaginateFilter")),b}]),angular.module("ivh.multiSelect").factory("ivhMultiSelectCore",["$injector","$interpolate","ivhMultiSelectSelm",function(a,b,c){"use strict";var d={};return d.init=function(d,e){var f=10,g=!0;d.isOpen=!1,d.filterString="",d.sel=c.options(e),d.enableMultiSelect="single"!==d.sel.mode,d.onFilterChange=angular.noop,angular.forEach(c.propsMap(),function(a){var b=e.$watch(a[1],function(b){b&&(d.sel[a[0]]=b,"mode"===a[0]&&(d.enableMultiSelect="single"!==b))});e.$on("$destroy",b)}),d.sel.onChange=function(a){e.selOnChange({item:a})};var h,i;d.getLabelFor=function(a){return i?i({item:a}):a[h]},e.$watch("labelExpr || labelAttr",function(){h=e.labelAttr||"label",i=e.labelExpr?b(e.labelExpr):null}),d.hasPager=g&&a.has("ivhPaginateFilter"),d.ixPage=0,d.sizePage=f},d}]),angular.module("ivh.multiSelect").factory("ivhMultiSelectSelm",["selectionModelOptions",function(a){"use strict";var b={},c={type:"checkbox",mode:"multi-additive"};return b.propsMap=function(){return[["type","selectionModelType"],["mode","selectionModelMode"],["selectedAttribute","selectionModelSelectedAttribute"],["selectedClass","selectionModelSelectedClass"],["cleanupStategy","selectionModelCleanupStrategy"],["selectedItems","selectionModelSelectedItems"]]},b.options=function(d){var e=angular.extend({},a.get(),c);return angular.forEach(b.propsMap(),function(a){d[a[1]]&&(e[a[0]]=d[a[1]])}),e},b}]);